{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","isErrorMessage","setIsErrorMessage","_useState5","_useState6","isLoading","setIsLoading","_useState7","Response","Error","_useState8","movieFromServer","setMovieFromServer","isError","useRef","Title","Plot","Poster","imdbID","concat","current","_Fragment","onSubmit","event","preventDefault","normalizeQuery","toLowerCase","fetch","then","res","json","catch","getMovie","movieData","finally","htmlFor","type","id","placeholder","value","onChange","target","disabled","cn","onClick","find","movie1","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,eAAA,OAAKC,UAAU,OAAO,UAAQ,YAAWC,SAAA,CACvCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACE,UAAQ,cACRC,IAAKL,EAAMM,OACXC,IAAI,kBAIVN,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJE,IAAI,aAIVH,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAa,UAAQ,aAAYC,SAAEH,EAAMQ,aAI1DP,eAAA,OAAKC,UAAU,UAAU,UAAQ,mBAAkBC,SAAA,CAChDH,EAAMS,YACPL,cAAA,SACAA,cAAA,KAAGM,KAAMV,EAAMW,QAAS,UAAQ,WAAUR,SAAC,iBAK3C,EChCKS,EAA8B,SAAHb,GAAA,IAAMc,EAAMd,EAANc,OAAM,OAClDT,cAAA,OAAKF,UAAU,SAAQC,SACpBU,EAAOC,KAAI,SAAAd,GAAK,OACfI,cAACN,EAAS,CAERE,MAAOA,GADFA,EAAMe,OAEX,KAEA,E,6BCHR,IAGaC,EAA6B,SAAHjB,GAA+B,IAAzBkB,EAASlB,EAATkB,UAAWJ,EAAMd,EAANc,OACtDK,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAA4CL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAAnDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAkCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAGIb,mBAAoC,CACtCc,SAAU,QACVC,MAAO,qBACPC,EAAAd,YAAAW,EAAA,GALAI,EAAeD,EAAA,GACfE,EAAkBF,EAAA,GAMdG,EAAUC,kBAAO,GACnBvC,EAAe,CACjBQ,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,IAoDV,MAdiC,SAA7BqB,EAAgBH,WAClBjC,EAAQ,CACNQ,MAAO4B,EAAgBI,MACvB/B,YAAa2B,EAAgBK,KAC7BnC,OAAmC,QAA3B8B,EAAgBM,OA/DR,4DAiEZN,EAAgBM,OACpB3B,OAAQqB,EAAgBO,OACxBhC,QAAQ,GAADiC,OAlED,+BAkESA,OAAGR,EAAgBO,SAGpCL,EAAQO,SAAU,GAIlB5C,eAAA6C,WAAA,CAAA3C,SAAA,CACEF,eAAA,QACEC,UAAU,aACV6C,SArDe,SAACC,GACpBA,EAAMC,iBACNX,EAAQO,SAAU,EAClBd,GAAa,GAEb,IAAMmB,EAAiB5B,EAAM6B,cAEI,UAA7Bf,EAAgBH,WAClBK,EAAQO,SAAU,GC1CjB,SAAkBvB,GACvB,OAAO8B,MAAM,GAADR,OAHE,2CAGS,OAAAA,OAAMtB,IAC1B+B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBC,OAAM,iBAAO,CACZvB,SAAU,QACVC,MAAO,mBACR,GACL,CDsCIuB,CAASP,GACNG,MAAK,SAAAK,GACJ/B,GAAkB,GAClBU,EAAmBqB,EACrB,IACCF,QACAG,SAAQ,kBAAM5B,GAAa,EAAM,GACtC,EAmC6B5B,SAAA,CAEvBF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQ0D,QAAQ,cAAazD,SAAC,gBAI/CC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACE,UAAQ,aACRyD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7D,UAAU,QACV8D,MAAO1C,EACP2C,SAAU,SAACjB,GACTzB,EAASyB,EAAMkB,OAAOF,OACtBrC,GAAkB,EACpB,MAIFW,EAAQO,SAAWnB,GACnBtB,cAAA,KAAGF,UAAU,iBAAiB,UAAQ,eAAcC,SAAC,4CAMzDF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,eACRyD,KAAK,SACLM,UAAW7C,EACXpB,UAAWkE,IAAG,kBAAmB,CAC/B,aAActC,IACb3B,SACJ,mBAK2B,SAA7BiC,EAAgBH,UACf7B,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,YACRyD,KAAK,SACL3D,UAAU,oBACVmE,QAlFG,WACFxD,EAAOyD,MAAK,SAAAC,GAAM,OAAIA,EAAOxD,SAAWf,EAAMe,MAAM,KAG/DE,EAAU,GAAD2B,OAAA4B,YAAK3D,GAAM,CAAEb,KAGxBsC,EAAQO,SAAU,EAClBtB,EAAS,IACTc,EAAmB,CACjBJ,SAAU,QACVC,MAAO,oBAEX,EAqEgC/B,SACnB,4BAQqB,SAA7BiC,EAAgBH,UACfhC,eAAA,OAAKC,UAAU,YAAY,UAAQ,mBAAkBC,SAAA,CACnDC,cAAA,MAAIF,UAAU,QAAOC,SAAC,YACtBC,cAACN,EAAS,CAACE,MAAOA,SAK5B,EExJayE,EAAM,WACjB,IAAAvD,EAA4BC,mBAAkB,IAAGC,EAAAC,YAAAH,EAAA,GAA1CL,EAAMO,EAAA,GAAEH,EAASG,EAAA,GAExB,OACEnB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACQ,EAAU,CAACC,OAAQA,MAGtBT,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACY,EAAS,CACRC,UAAWA,EACXJ,OAAQA,QAKlB,ECnBA6D,IAASC,OAAOvE,cAACqE,EAAG,IAAKG,SAASC,eAAe,Q","file":"static/js/main.2df457d4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useRef, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: (movie: Movie[]) => void;\n  movies: Movie[];\n};\n\n// eslint-disable-next-line max-len\nconst defaultImgUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\nconst url = 'https://www.imdb.com/title/';\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [query, setQuery] = useState('');\n  const [isErrorMessage, setIsErrorMessage] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [\n    movieFromServer,\n    setMovieFromServer,\n  ] = useState<MovieData | ResponseError>({\n    Response: 'False',\n    Error: 'Movie not Found!',\n  });\n\n  const isError = useRef(false);\n  let movie: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    isError.current = false;\n    setIsLoading(true);\n\n    const normalizeQuery = query.toLowerCase();\n\n    if (movieFromServer.Response === 'False') {\n      isError.current = true;\n    }\n\n    getMovie(normalizeQuery)\n      .then(movieData => {\n        setIsErrorMessage(true);\n        setMovieFromServer(movieData);\n      })\n      .catch()\n      .finally(() => setIsLoading(false));\n  };\n\n  const addMovie = () => {\n    const isId = movies.find(movie1 => movie1.imdbId === movie.imdbId);\n\n    if (!isId) {\n      setMovies([...movies, movie]);\n    }\n\n    isError.current = false;\n    setQuery('');\n    setMovieFromServer({\n      Response: 'False',\n      Error: 'Movie not Found!',\n    });\n  };\n\n  if (movieFromServer.Response === 'True') {\n    movie = {\n      title: movieFromServer.Title,\n      description: movieFromServer.Plot,\n      imgUrl: movieFromServer.Poster === 'N/A'\n        ? defaultImgUrl\n        : movieFromServer.Poster,\n      imdbId: movieFromServer.imdbID,\n      imdbUrl: `${url}${movieFromServer.imdbID}`,\n    };\n\n    isError.current = false;\n  }\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsErrorMessage(false);\n              }}\n            />\n          </div>\n\n          {(isError.current && isErrorMessage) && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movieFromServer.Response === 'True' && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movieFromServer.Response === 'True' && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=c7b84633';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}